{
  "address": "0xA14c614557a87591393D42f7c44f35283B49A284",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "Wallet__NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "getAmountByAddress",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x1affd8b137b91a514a5a59f371b95fb2c722db62b44d2b599bb0fcf62b230ea3",
  "receipt": {
    "to": null,
    "from": "0x8ce582BEdED889c3895Ea7d83242093d28fA2e2B",
    "contractAddress": "0xA14c614557a87591393D42f7c44f35283B49A284",
    "transactionIndex": 10,
    "gasUsed": "710559",
    "logsBloom": "0x
    "blockHash": "0x10b455ea4e3393ab0f482078bbda6b4d5aea31759504ce1369ad1af2373c5ce5",
    "transactionHash": "0x1affd8b137b91a514a5a59f371b95fb2c722db62b44d2b599bb0fcf62b230ea3",
    "logs": [],
    "blockNumber": 11320130,
    "cumulativeGasUsed": "6596180",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x8A753747A1Fa494EC906cE90E9f37563A8AF630e"
  ],
  "numDeployments": 2,
  "solcInputHash": "67258aee91861a762eeee9773586ce81",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"Wallet__NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"getAmountByAddress\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Wallet.sol\":\"Wallet\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.9;\\r\\n\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\n\\r\\nlibrary PriceConverter {\\r\\n    function getPrice(AggregatorV3Interface priceFeed)\\r\\n        internal\\r\\n        view\\r\\n        returns (uint256)\\r\\n    {\\r\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\r\\n        return uint256(answer / 100000000);\\r\\n    }\\r\\n\\r\\n    function getPriceInUSD(uint256 ethAmt, AggregatorV3Interface priceFeed)\\r\\n        internal\\r\\n        view\\r\\n        returns (uint256)\\r\\n    {\\r\\n        uint256 ethPrice = getPrice(priceFeed);\\r\\n        uint256 ethInUSD = (ethPrice * ethAmt) / 1000000000;\\r\\n\\r\\n        return ethInUSD;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xace8b980152e58180a0439eba40b9a19bb9906c9363ebde573438d47bbf8eca0\",\"license\":\"MIT\"},\"contracts/Wallet.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.9;\\r\\n\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\nimport \\\"./PriceConverter.sol\\\";\\r\\n\\r\\nerror Wallet__NotOwner();\\r\\n\\r\\ncontract Wallet {\\r\\n    // Type Declarations\\r\\n    using PriceConverter for uint256;\\r\\n\\r\\n    address private immutable owner;\\r\\n    uint256 private balance = 0;\\r\\n    uint256 private constant MIN_USD = 50 * 10**9;\\r\\n    mapping(address => uint256) private sendersAddress;\\r\\n    AggregatorV3Interface private priceFeed;\\r\\n\\r\\n    constructor(address priceFeedAddress) {\\r\\n        owner = msg.sender;\\r\\n        priceFeed = AggregatorV3Interface(priceFeedAddress);\\r\\n    }\\r\\n\\r\\n    fallback() external payable {\\r\\n        fund();\\r\\n    }\\r\\n\\r\\n    receive() external payable {\\r\\n        fund();\\r\\n    }\\r\\n\\r\\n    modifier onlyOwner() {\\r\\n        if (msg.sender != owner) {\\r\\n            revert Wallet__NotOwner();\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    function fund() public payable {\\r\\n        require(\\r\\n            msg.value.getPriceInUSD(priceFeed) >= MIN_USD,\\r\\n            \\\"You need to spend more ETH!\\\"\\r\\n        );\\r\\n        sendersAddress[msg.sender] += msg.value;\\r\\n        balance += msg.value;\\r\\n    }\\r\\n\\r\\n    function withdraw(uint256 _amount) public onlyOwner {\\r\\n        if (_amount > balance) {\\r\\n            revert(\\\"Balance is low !!\\\");\\r\\n        } else {\\r\\n            (bool sent, ) = owner.call{value: _amount}(\\\"\\\");\\r\\n            require(sent, \\\"Transaction Failed!!\\\");\\r\\n            balance -= _amount;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function getPriceFeed() public view returns (AggregatorV3Interface) {\\r\\n        return priceFeed;\\r\\n    }\\r\\n\\r\\n    function getBalance() public view returns (uint256) {\\r\\n        return balance;\\r\\n    }\\r\\n\\r\\n    function getAmountByAddress(address _address)\\r\\n        public\\r\\n        view\\r\\n        returns (uint256)\\r\\n    {\\r\\n        return sendersAddress[_address];\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x55abe060167a3ebbdab3697e74955ab05ee89b35ca3d18c9e1672ea4fe16491b\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040526000805534801561001457600080fd5b50604051610cce380380610cce83398181016040528101906100369190610114565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610141565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100e1826100b6565b9050919050565b6100f1816100d6565b81146100fc57600080fd5b50565b60008151905061010e816100e8565b92915050565b60006020828403121561012a576101296100b1565b5b6000610138848285016100ff565b91505092915050565b608051610b6b6101636000396000818161022401526102f00152610b6b6000f3fe60806040526004361061004e5760003560e01c806312065fe0146100675780632e1a7d4d146100925780639e87a5cd146100bb578063b60d4288146100e6578063c8249f92146100f05761005d565b3661005d5761005b61012d565b005b61006561012d565b005b34801561007357600080fd5b5061007c610219565b6040516100899190610537565b60405180910390f35b34801561009e57600080fd5b506100b960048036038101906100b49190610583565b610222565b005b3480156100c757600080fd5b506100d06103d4565b6040516100dd919061062f565b60405180910390f35b6100ee61012d565b005b3480156100fc57600080fd5b5061011760048036038101906101129190610688565b6103fe565b6040516101249190610537565b60405180910390f35b640ba43b7400610168600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461044790919063ffffffff16565b10156101a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101a090610712565b60405180910390fd5b34600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546101f89190610761565b92505081905550346000808282546102109190610761565b92505081905550565b60008054905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102a7576040517f9b82e32c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000548111156102ec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102e390610803565b60405180910390fd5b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168260405161033290610854565b60006040518083038185875af1925050503d806000811461036f576040519150601f19603f3d011682016040523d82523d6000602084013e610374565b606091505b50509050806103b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103af906108b5565b60405180910390fd5b816000808282546103c991906108d5565b925050819055505050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000806104538361047f565b90506000633b9aca0085836104689190610909565b6104729190610992565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156104c857600080fd5b505afa1580156104dc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105009190610a50565b5050509150506305f5e100816105169190610acb565b915050919050565b6000819050919050565b6105318161051e565b82525050565b600060208201905061054c6000830184610528565b92915050565b600080fd5b6105608161051e565b811461056b57600080fd5b50565b60008135905061057d81610557565b92915050565b60006020828403121561059957610598610552565b5b60006105a78482850161056e565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006105f56105f06105eb846105b0565b6105d0565b6105b0565b9050919050565b6000610607826105da565b9050919050565b6000610619826105fc565b9050919050565b6106298161060e565b82525050565b60006020820190506106446000830184610620565b92915050565b6000610655826105b0565b9050919050565b6106658161064a565b811461067057600080fd5b50565b6000813590506106828161065c565b92915050565b60006020828403121561069e5761069d610552565b5b60006106ac84828501610673565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b60006106fc601b836106b5565b9150610707826106c6565b602082019050919050565b6000602082019050818103600083015261072b816106ef565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061076c8261051e565b91506107778361051e565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156107ac576107ab610732565b5b828201905092915050565b7f42616c616e6365206973206c6f77202121000000000000000000000000000000600082015250565b60006107ed6011836106b5565b91506107f8826107b7565b602082019050919050565b6000602082019050818103600083015261081c816107e0565b9050919050565b600081905092915050565b50565b600061083e600083610823565b91506108498261082e565b600082019050919050565b600061085f82610831565b9150819050919050565b7f5472616e73616374696f6e204661696c65642121000000000000000000000000600082015250565b600061089f6014836106b5565b91506108aa82610869565b602082019050919050565b600060208201905081810360008301526108ce81610892565b9050919050565b60006108e08261051e565b91506108eb8361051e565b9250828210156108fe576108fd610732565b5b828203905092915050565b60006109148261051e565b915061091f8361051e565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561095857610957610732565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061099d8261051e565b91506109a88361051e565b9250826109b8576109b7610963565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b6109e2816109c3565b81146109ed57600080fd5b50565b6000815190506109ff816109d9565b92915050565b6000819050919050565b610a1881610a05565b8114610a2357600080fd5b50565b600081519050610a3581610a0f565b92915050565b600081519050610a4a81610557565b92915050565b600080600080600060a08688031215610a6c57610a6b610552565b5b6000610a7a888289016109f0565b9550506020610a8b88828901610a26565b9450506040610a9c88828901610a3b565b9350506060610aad88828901610a3b565b9250506080610abe888289016109f0565b9150509295509295909350565b6000610ad682610a05565b9150610ae183610a05565b925082610af157610af0610963565b5b600160000383147f800000000000000000000000000000000000000000000000000000000000000083141615610b2a57610b29610732565b5b82820590509291505056fea264697066735822122090a2f62e89240b12d7fca43c919da2de368788b00587d5f81c363f1ef79043b464736f6c63430008090033",
  "deployedBytecode": "0x60806040526004361061004e5760003560e01c806312065fe0146100675780632e1a7d4d146100925780639e87a5cd146100bb578063b60d4288146100e6578063c8249f92146100f05761005d565b3661005d5761005b61012d565b005b61006561012d565b005b34801561007357600080fd5b5061007c610219565b6040516100899190610537565b60405180910390f35b34801561009e57600080fd5b506100b960048036038101906100b49190610583565b610222565b005b3480156100c757600080fd5b506100d06103d4565b6040516100dd919061062f565b60405180910390f35b6100ee61012d565b005b3480156100fc57600080fd5b5061011760048036038101906101129190610688565b6103fe565b6040516101249190610537565b60405180910390f35b640ba43b7400610168600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461044790919063ffffffff16565b10156101a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101a090610712565b60405180910390fd5b34600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546101f89190610761565b92505081905550346000808282546102109190610761565b92505081905550565b60008054905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102a7576040517f9b82e32c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000548111156102ec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102e390610803565b60405180910390fd5b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168260405161033290610854565b60006040518083038185875af1925050503d806000811461036f576040519150601f19603f3d011682016040523d82523d6000602084013e610374565b606091505b50509050806103b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103af906108b5565b60405180910390fd5b816000808282546103c991906108d5565b925050819055505050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000806104538361047f565b90506000633b9aca0085836104689190610909565b6104729190610992565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156104c857600080fd5b505afa1580156104dc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105009190610a50565b5050509150506305f5e100816105169190610acb565b915050919050565b6000819050919050565b6105318161051e565b82525050565b600060208201905061054c6000830184610528565b92915050565b600080fd5b6105608161051e565b811461056b57600080fd5b50565b60008135905061057d81610557565b92915050565b60006020828403121561059957610598610552565b5b60006105a78482850161056e565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006105f56105f06105eb846105b0565b6105d0565b6105b0565b9050919050565b6000610607826105da565b9050919050565b6000610619826105fc565b9050919050565b6106298161060e565b82525050565b60006020820190506106446000830184610620565b92915050565b6000610655826105b0565b9050919050565b6106658161064a565b811461067057600080fd5b50565b6000813590506106828161065c565b92915050565b60006020828403121561069e5761069d610552565b5b60006106ac84828501610673565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b60006106fc601b836106b5565b9150610707826106c6565b602082019050919050565b6000602082019050818103600083015261072b816106ef565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061076c8261051e565b91506107778361051e565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156107ac576107ab610732565b5b828201905092915050565b7f42616c616e6365206973206c6f77202121000000000000000000000000000000600082015250565b60006107ed6011836106b5565b91506107f8826107b7565b602082019050919050565b6000602082019050818103600083015261081c816107e0565b9050919050565b600081905092915050565b50565b600061083e600083610823565b91506108498261082e565b600082019050919050565b600061085f82610831565b9150819050919050565b7f5472616e73616374696f6e204661696c65642121000000000000000000000000600082015250565b600061089f6014836106b5565b91506108aa82610869565b602082019050919050565b600060208201905081810360008301526108ce81610892565b9050919050565b60006108e08261051e565b91506108eb8361051e565b9250828210156108fe576108fd610732565b5b828203905092915050565b60006109148261051e565b915061091f8361051e565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561095857610957610732565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061099d8261051e565b91506109a88361051e565b9250826109b8576109b7610963565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b6109e2816109c3565b81146109ed57600080fd5b50565b6000815190506109ff816109d9565b92915050565b6000819050919050565b610a1881610a05565b8114610a2357600080fd5b50565b600081519050610a3581610a0f565b92915050565b600081519050610a4a81610557565b92915050565b600080600080600060a08688031215610a6c57610a6b610552565b5b6000610a7a888289016109f0565b9550506020610a8b88828901610a26565b9450506040610a9c88828901610a3b565b9350506060610aad88828901610a3b565b9250506080610abe888289016109f0565b9150509295509295909350565b6000610ad682610a05565b9150610ae183610a05565b925082610af157610af0610963565b5b600160000383147f800000000000000000000000000000000000000000000000000000000000000083141615610b2a57610b29610732565b5b82820590509291505056fea264697066735822122090a2f62e89240b12d7fca43c919da2de368788b00587d5f81c363f1ef79043b464736f6c63430008090033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 113,
        "contract": "contracts/Wallet.sol:Wallet",
        "label": "balance",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 124,
        "contract": "contracts/Wallet.sol:Wallet",
        "label": "sendersAddress",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 127,
        "contract": "contracts/Wallet.sol:Wallet",
        "label": "priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}